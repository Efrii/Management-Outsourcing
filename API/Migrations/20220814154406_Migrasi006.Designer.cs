// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220814154406_Migrasi006")]
    partial class Migrasi006
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Acceptment", b =>
                {
                    b.Property<int>("Id_Acceptment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_Jobs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Acceptment");

                    b.ToTable("TB_Acceptment");
                });

            modelBuilder.Entity("API.Models.CV", b =>
                {
                    b.Property<int>("Id_cv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cv_employee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_company")
                        .HasColumnType("int");

                    b.Property<int>("Id_employee")
                        .HasColumnType("int");

                    b.Property<string>("Job_selected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_cv");

                    b.HasIndex("Id_company");

                    b.HasIndex("Id_employee");

                    b.ToTable("TB_CV");
                });

            modelBuilder.Entity("API.Models.Class", b =>
                {
                    b.Property<int>("Id_class")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_class");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.Property<int>("Id_company")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address_company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_company");

                    b.ToTable("TB_Company");
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.Property<int>("Id_employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age_employee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datebirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email_employee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender_Employee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id_acceptment")
                        .HasColumnType("int");

                    b.Property<int?>("Id_class")
                        .HasColumnType("int");

                    b.Property<int?>("Id_manager")
                        .HasColumnType("int");

                    b.Property<int?>("Id_trainner")
                        .HasColumnType("int");

                    b.Property<bool?>("Is_place")
                        .HasColumnType("bit");

                    b.Property<string>("Name_employee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nik_employee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_employee");

                    b.HasIndex("Id_acceptment");

                    b.HasIndex("Id_class");

                    b.HasIndex("Id_manager");

                    b.HasIndex("Id_trainner");

                    b.ToTable("TB_Employee");
                });

            modelBuilder.Entity("API.Models.Interview", b =>
                {
                    b.Property<int>("Id_interview")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_interview")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_company")
                        .HasColumnType("int");

                    b.Property<int>("Id_employee")
                        .HasColumnType("int");

                    b.Property<string>("Interviewer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_accepted")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_done")
                        .HasColumnType("bit");

                    b.Property<string>("Job_position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url_Intertview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_interview");

                    b.HasIndex("Id_company");

                    b.HasIndex("Id_employee");

                    b.ToTable("TB_Interview");
                });

            modelBuilder.Entity("API.Models.Jobs", b =>
                {
                    b.Property<int>("Id_jobs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_company")
                        .HasColumnType("int");

                    b.Property<string>("Name_jobs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recruitment_skill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_jobs");

                    b.HasIndex("Id_company");

                    b.ToTable("TB_Jobs");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<int>("Id_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_role");

                    b.ToTable("TB_Role");
                });

            modelBuilder.Entity("API.Models.Score", b =>
                {
                    b.Property<int>("Id_score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_employee")
                        .HasColumnType("int");

                    b.Property<int>("Segment1")
                        .HasColumnType("int");

                    b.Property<int>("Segment2")
                        .HasColumnType("int");

                    b.Property<int>("Segment3")
                        .HasColumnType("int");

                    b.Property<int>("Segment4")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id_score");

                    b.HasIndex("Id_employee");

                    b.ToTable("TB_Score");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id_company")
                        .HasColumnType("int");

                    b.Property<int?>("Id_employee")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("Id_User");

                    b.HasIndex("Id_company");

                    b.HasIndex("Id_employee");

                    b.ToTable("TB_User");
                });

            modelBuilder.Entity("API.Models.UserRole", b =>
                {
                    b.Property<int>("Id_UserRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_role")
                        .HasColumnType("int");

                    b.Property<int>("Id_user")
                        .HasColumnType("int");

                    b.HasKey("Id_UserRole");

                    b.HasIndex("Id_role");

                    b.HasIndex("Id_user");

                    b.ToTable("TB_UserRole");
                });

            modelBuilder.Entity("API.Models.CV", b =>
                {
                    b.HasOne("API.Models.Company", "Companys")
                        .WithMany()
                        .HasForeignKey("Id_company")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("Id_employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.HasOne("API.Models.Acceptment", "Acceptments")
                        .WithMany()
                        .HasForeignKey("Id_acceptment");

                    b.HasOne("API.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("Id_class");

                    b.HasOne("API.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("Id_manager");

                    b.HasOne("API.Models.Employee", "Employeess")
                        .WithMany()
                        .HasForeignKey("Id_trainner");
                });

            modelBuilder.Entity("API.Models.Interview", b =>
                {
                    b.HasOne("API.Models.Company", "Companys")
                        .WithMany()
                        .HasForeignKey("Id_company")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("Id_employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.Jobs", b =>
                {
                    b.HasOne("API.Models.Company", "Companys")
                        .WithMany("Jobess")
                        .HasForeignKey("Id_company")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.Score", b =>
                {
                    b.HasOne("API.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("Id_employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.HasOne("API.Models.Company", "Companys")
                        .WithMany()
                        .HasForeignKey("Id_company");

                    b.HasOne("API.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("Id_employee");
                });

            modelBuilder.Entity("API.Models.UserRole", b =>
                {
                    b.HasOne("API.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("Id_role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("Id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
